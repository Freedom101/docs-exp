"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[73747],{1637:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>i});var n=o(74848),r=o(28453);const s={},d="Deploying Rocket.Chat Server Binaries on a FreeBSD system",c={id:"deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd/deploying-rocket.chat-server-binaries-on-a-freebsd-system",title:"Deploying Rocket.Chat Server Binaries on a FreeBSD system",description:"Note: This deployment method is not officially supported by Rocket.Chat, you might need to build your own or find a community version of the tar file.",source:"@site/docs/deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd/deploying-rocket.chat-server-binaries-on-a-freebsd-system.md",sourceDirName:"deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd",slug:"/deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd/deploying-rocket.chat-server-binaries-on-a-freebsd-system",permalink:"/docs-exp/docs/deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd/deploying-rocket.chat-server-binaries-on-a-freebsd-system",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd/deploying-rocket.chat-server-binaries-on-a-freebsd-system.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"FreeBSD",permalink:"/docs-exp/docs/deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/freebsd/"},next:{title:"Galaxy",permalink:"/docs-exp/docs/deploy/deploy-rocket.chat/additional-deployment-methods/unsupported-methods/galaxy"}},a={},i=[];function l(e){const t={a:"a",code:"code",h1:"h1",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"deploying-rocketchat-server-binaries-on-a-freebsd-system",children:"Deploying Rocket.Chat Server Binaries on a FreeBSD system"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Note: This deployment method is not officially supported by Rocket.Chat, you might need to build your own or find a community version of the tar file."})}),"\n",(0,n.jsxs)(t.p,{children:["This is the recommended production deployment method on and is based on the excellent ",(0,n.jsx)(t.a,{href:"http://meteor-universal.tumblr.com/",children:"Meteor Universal fork"})," by Tom Freudenberg."]}),"\n",(0,n.jsxs)(t.p,{children:["As ",(0,n.jsx)(t.code,{children:"root"}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"# pkg install bash git GraphicsMagick mongodb python scons gmake\n# sysrc mongod_enable=YES\n# service mongod start\n# pw groupadd rocketchat\n# pw useradd rocketchat -g rocketchat -s /usr/local/bin/bash -m\n# su -l rocketchat\n"})}),"\n",(0,n.jsx)(t.p,{children:"As user running Rocket.Chat:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"$ git clone --depth 1 -b release-1.2.1-universal https://github.com/4commerce-technologies-AG/meteor\n$ cd meteor\n$ ./meteor --version\n$ cd $HOME\n$ tar xf rocket.chat-freebsd-develop.tgz\n$ cd $HOME/bundle/programs/server\n$ $HOME/meteor/dev_bundle/bin/npm install\n$ cd $HOME/bundle\n$ export MONGO_URL=mongodb://localhost:27017/rocketchat\n$ export Accounts_UseDNSDomainCheck=false\n$ export ROOT_URL=http://your.host:3000\n$ export PORT=3000\n$ export ADMIN_PASS=supersecret\n$ export ADMIN_USER=admin\n$ $HOME/meteor/dev_bundle/bin/node $HOME/bundle/main.js\n"})}),"\n",(0,n.jsx)(t.p,{children:"A very crude startup file for the server, (very ugly, does not fork, don't set rocketchat_enable=YES):"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'#!/bin/sh\n\n# PROVIDE: rocketchat\n# REQUIRE: LOGIN mongod\n# KEYWORD: shutdown\n#\n# Add the following lines to /etc/rc.conf.local or /etc/rc.conf\n# to enable this service:\n#\n# rocketchat_enable (bool): Set to "NO" by default.\n# rocketchat_env (str): List of environment variables passed to rocketchat\n#\n\n. /etc/rc.subr\n\nname="rocketchat"\nrcvar=rocketchat_enable\n\nload_rc_config $name\n\n: ${rocketchat_enable="NO"}\n: ${rocketchat_env="MONGO_URL=mongodb://localhost:27017/rocketchat PORT=3000"}\n: ${rocketchat_user="rocketchat"}\n: ${rocketchat_group="rocketchat"}\n\ncommand=/home/rocketchat/meteor/dev_bundle/bin/node\ncommand_args="/home/rocketchat/Rocket.Chat/.meteor/local/build/main.js"\n\nrun_rc_command "$1"\n'})})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>d,x:()=>c});var n=o(96540);const r={},s=n.createContext(r);function d(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);