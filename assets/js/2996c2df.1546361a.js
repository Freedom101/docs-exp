"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[20256],{25678:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=i(74848),n=i(28453);const r={},o="Prometheus",a={id:"use-rocket.chat/workspace-administration/integrations/prometheus",title:"Prometheus",description:"Prometheus is an open-source application used for event monitoring and alerting. It records metrics in a time series database (allowing for high dimensionality)) built using an HTTP pull model with flexible queries and real-time alerting. The project is written in Go) and licensed under the Apache 2 License, with source code available on GitHub.&#x20;",source:"@site/docs/use-rocket.chat/workspace-administration/integrations/prometheus.md",sourceDirName:"use-rocket.chat/workspace-administration/integrations",slug:"/use-rocket.chat/workspace-administration/integrations/prometheus",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/integrations/prometheus",draft:!1,unlisted:!1,editUrl:"https://github.com/Freedom101/docs-exp/tree/main/my-website/docs/use-rocket.chat/workspace-administration/integrations/prometheus.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PagerDuty",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/integrations/pagerduty"},next:{title:"Review Board",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/integrations/reviewboard"}},c={},l=[];function h(e){const t={a:"a",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"prometheus",children:"Prometheus"}),"\n",(0,s.jsxs)(t.p,{children:["Prometheus is an open-source application used for ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Event_monitoring",children:"event monitoring"})," and ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Alert_messaging",children:"alerting"}),". It records metrics in a ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Time_series_database",children:"time series database"})," (allowing for high ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Dimension_(metadata)",children:"dimensionality"}),") built using an ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/HTTP",children:"HTTP"})," ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Pull_technology",children:"pull model"})," with flexible queries and real-time alerting. The project is written in ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Go_(programming_language)",children:"Go"})," and licensed under the Apache 2 License, with ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Source_code",children:"source code"})," available on ",(0,s.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/GitHub",children:"GitHub"}),". "]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/RocketChat/Rocket.Chat.Metrics",children:"Rocket.Chat.Metrics"})," repository contains a basic monitoring setup of ",(0,s.jsx)(t.a,{href:"https://github.com/RocketChat/Rocket.Chat",children:"Rocket.Chat"}),", based on Grafana and Prometheus. It currently shows and visualizes the following application metrics/information:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"General totals"}),": users online/away, DDP users, diffs based on time range"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Metrics"}),": requests and total size per instance"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"NodeJS"}),": active handles, requests, event loop lag, heap used, per instance heap, garbage collector"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"DDP rate limiter"}),": by method, by type, by userId, by connectionId"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Rocket.Chat Data:"})," messages sent, total sent, user presence, users & sessions, Oplog, push queue, Meteor facts, total users, total rooms, notification per minute per notification type"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Meteor"}),": methods total time, methods time, method calls per minute"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Subscriptions"}),": subscription total time, subscription time, subscription calls per minute"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Callbacks & Hooks:"})," callbacks total time, callbacks time, callback calls per minute, hooks total time, hooks time, hook calls per minute"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"REST API:"})," REST total time, REST time, REST calls per minute"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/RocketChat/Rocket.Chat.Metrics",children:"Rocket.Chat.Metrics"})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var s=i(96540);const n={},r=s.createContext(n);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);