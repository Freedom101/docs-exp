"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[20777],{16042:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var t=r(74848),o=r(28453);const s={},i="Configuring SSL Reverse Proxy",d={id:"setup-and-configure/environment-configuration/configuring-ssl-reverse-proxy",title:"Configuring SSL Reverse Proxy",description:"Rocket.Chat is a middle tier application server, by itself it does not handle SSL. However, Rocket.Chat works well with several industrial grade, battle-tested reverse proxy servers (see nginx below, for example) that you can configure to handle SSL.",source:"@site/docs/setup-and-configure/environment-configuration/configuring-ssl-reverse-proxy.md",sourceDirName:"setup-and-configure/environment-configuration",slug:"/setup-and-configure/environment-configuration/configuring-ssl-reverse-proxy",permalink:"/docs-exp/docs/setup-and-configure/environment-configuration/configuring-ssl-reverse-proxy",draft:!1,unlisted:!1,editUrl:"https://github.com/Freedom101/docs-exp/tree/main/my-website/docs/setup-and-configure/environment-configuration/configuring-ssl-reverse-proxy.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Check Node.js Version",permalink:"/docs-exp/docs/setup-and-configure/environment-configuration/check-node.js-version"},next:{title:"Deployment Environment Variables",permalink:"/docs-exp/docs/setup-and-configure/environment-configuration/deployment-environment-variables/"}},c={},a=[{value:"Running behind a nginx SSL Reverse Proxy",id:"running-behind-a-nginx-ssl-reverse-proxy",level:2},{value:"Running under Plesk Onyx behind Nginx",id:"running-under-plesk-onyx-behind-nginx",level:2},{value:"Running behind an Apache SSL Reverse Proxy",id:"running-behind-an-apache-ssl-reverse-proxy",level:2},{value:"Running behind a Caddy Reverse Proxy with Free SSL",id:"running-behind-a-caddy-reverse-proxy-with-free-ssl",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configuring-ssl-reverse-proxy",children:"Configuring SSL Reverse Proxy"}),"\n",(0,t.jsx)(n.p,{children:"Rocket.Chat is a middle tier application server, by itself it does not handle SSL. However, Rocket.Chat works well with several industrial grade, battle-tested reverse proxy servers (see nginx below, for example) that you can configure to handle SSL."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," When deploying Rocket.Chat, you must set the ",(0,t.jsx)(n.code,{children:"ROOT_URL"}),"  parameter to a HTTPS address without including a port number. So instead of ",(0,t.jsx)(n.code,{children:"ROOT_URL=http://localhost:3000"}),", use something like ",(0,t.jsx)(n.code,{children:"https://your_hostname.com"})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," When setting up a reverse proxy in front of your Rocket.Chat server you need to configure Rocket.Chat to use the correct clientAddress. The rate limiter (and maybe other features) will not work properly if this is not done. Set ",(0,t.jsx)(n.code,{children:"HTTP_FORWARDED_COUNT"})," Environment variable to the correct number of proxies in front of Rocket.Chat. If you are using snap there's documentation how to do it ",(0,t.jsx)(n.a,{href:"https://docs.rocket.chat/deploy/prepare-for-your-deployment/rapid-deployment-methods/snaps",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"running-behind-a-nginx-ssl-reverse-proxy",children:"Running behind a nginx SSL Reverse Proxy"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," These instructions were written for Ubuntu. For Amazon Linux, the conf file for the proxy goes in ",(0,t.jsx)(n.code,{children:"/etc/nginx/conf.d/"})," and needs to have a discrete name ending in ",(0,t.jsx)(n.code,{children:".conf"})," and nginx is installed using ",(0,t.jsx)(n.code,{children:"yum -y install nginx"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"Run this as root:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apt-get install nginx\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add your private key to ",(0,t.jsx)(n.code,{children:"/etc/nginx/certificate.key"})]}),"\n",(0,t.jsxs)(n.p,{children:["Lock down permissions: ",(0,t.jsx)(n.code,{children:"chmod 400 /etc/nginx/certificate.key"})]}),"\n",(0,t.jsxs)(n.p,{children:["Add your certificate to ",(0,t.jsx)(n.code,{children:"/etc/nginx/certificate.crt"})]}),"\n",(0,t.jsxs)(n.p,{children:["Edit ",(0,t.jsx)(n.code,{children:"/etc/nginx/sites-enabled/default"})," or if you use nginx from docker ",(0,t.jsx)(n.code,{children:"/etc/nginx/conf.d/default.conf"}),' and be sure to use your actual hostname in lieu of the sample hostname "your_hostname.com" below.']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'# Upstreams\nupstream backend {\n    server 127.0.0.1:3000;\n}\n\n# HTTPS Server\nserver {\n    listen 443;\n    server_name your_hostname.com;\n\n    # You can increase the limit if your need to.\n    client_max_body_size 200M;\n\n    error_log /var/log/nginx/rocketchat.access.log;\n\n    ssl on;\n    ssl_certificate /etc/nginx/certificate.crt;\n    ssl_certificate_key /etc/nginx/certificate.key;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # don\u2019t use SSLv3 ref: POODLE\n\n    location / {\n        proxy_pass http://backend;\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n        proxy_set_header Host $http_host;\n\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto https;\n        proxy_set_header X-Nginx-Proxy true;\n\n        proxy_redirect off;\n    }\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Restart Nginx: ",(0,t.jsx)(n.code,{children:"service nginx restart"})]}),"\n",(0,t.jsx)(n.h2,{id:"running-under-plesk-onyx-behind-nginx",children:"Running under Plesk Onyx behind Nginx"}),"\n",(0,t.jsx)(n.p,{children:"Plesk Onyx has now a docker installation and Nginx proxy docker rule generator built in, that doesn't support adding custom directives. Disable it and add the rules manually in the additional Nginx directives space. A scheme follows (replace 30000 with your external docker mapped port)."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'#manual extension docker with socket upgrade begin\nlocation ~ ^/.* {\n    proxy_pass http://0.0.0.0:3000;\n    proxy_set_header Host             $host;\n    proxy_set_header X-Real-IP        $remote_addr;\n    proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;\n\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header Connection "upgrade";\n    proxy_set_header X-Forwarded-Proto http;\n    proxy_set_header X-Nginx-Proxy true;\n    proxy_http_version 1.1;\n\n    proxy_redirect off;\n}\n\n#extension docker end\n'})}),"\n",(0,t.jsx)(n.h2,{id:"running-behind-an-apache-ssl-reverse-proxy",children:"Running behind an Apache SSL Reverse Proxy"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," When deploying Rocket.Chat, you must set the ",(0,t.jsx)(n.code,{children:"ROOT_URL"})," parameter to a HTTPS address without including a port number.  So instead of ",(0,t.jsx)(n.code,{children:"ROOT_URL=http://localhost:3000"}),", use something like ",(0,t.jsx)(n.code,{children:"https://your_hostname.com"})]}),"\n",(0,t.jsx)(n.p,{children:"Run this as root:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apt-get update\napt-get install apache2\na2enmod proxy_http\na2enmod proxy\na2enmod ssl\na2enmod proxy_wstunnel\na2enmod rewrite\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Add your private key to ",(0,t.jsx)(n.code,{children:"/etc/ssl/private/chat.domain.com.key"})]}),"\n",(0,t.jsxs)(n.p,{children:["Lock down permissions: ",(0,t.jsx)(n.code,{children:"chmod 400 /etc/ssl/private/chat.domain.com.key"})]}),"\n",(0,t.jsxs)(n.p,{children:["Add your certificate to ",(0,t.jsx)(n.code,{children:"/etc/ssl/certs/chat.domain.com.crt"})]}),"\n",(0,t.jsxs)(n.p,{children:["Add your intermediate to ",(0,t.jsx)(n.code,{children:"/etc/ssl/certs/intermediate.ca.pem"})]}),"\n",(0,t.jsxs)(n.p,{children:["Edit ",(0,t.jsx)(n.code,{children:"/etc/apache2/sites-enabled/rocketchat.conf"}),' and be sure to use your actual hostname in lieu of the sample hostname "your_hostname.com" below.']}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"<VirtualHost *:443>\n    ServerAdmin it@domain.com\n    ServerName chat.domain.com\n\n    LogLevel info\n    ErrorLog /var/log/chat.domain.com_error.log\n    TransferLog /var/log/chat.domain.com_access.log\n\n    SSLEngine On\n    SSLCertificateFile /etc/ssl/certs/chat.domain.com.crt\n    SSLCertificateKeyFile /etc/ssl/private/chat.domain.com.key\n    SSLCertificateChainFile /etc/ssl/certs/intermediate.ca.pem\n\n    <Location />\n        Require all granted\n    </Location>\n\n    RewriteEngine On\n    RewriteCond %{HTTP:CONNECTION} Upgrade [NC]\n    RewriteCond %{HTTP:Upgrade} =websocket [NC]\n    RewriteRule /(.*)           ws://localhost:3000/$1 [P,L]\n    RewriteCond %{HTTP:Upgrade} !=websocket [NC]\n    RewriteRule /(.*)           http://localhost:3000/$1 [P,L]\n\n    ProxyPassReverse /          http://localhost:3000/\n</VirtualHost>\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Restart Apache: ",(0,t.jsx)(n.code,{children:"service apache2 restart"})]}),"\n",(0,t.jsx)(n.h2,{id:"running-behind-a-caddy-reverse-proxy-with-free-ssl",children:"Running behind a Caddy Reverse Proxy with Free SSL"}),"\n",(0,t.jsxs)(n.p,{children:["First, download ",(0,t.jsx)(n.a,{href:"https://caddyserver.com",children:"Caddy"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"curl https://getcaddy.com | bash"})}),"\n",(0,t.jsx)(n.p,{children:"Now Caddy is installed, but you still need a service to run Caddy http server on the background."}),"\n",(0,t.jsxs)(n.p,{children:["You must have at least port ",(0,t.jsx)(n.strong,{children:"443"})," opened so the Caddy server will request an SSL certificate from Let's Encrypt"]}),"\n",(0,t.jsx)(n.p,{children:"You can also open port 80 to redirect http requests to https."}),"\n",(0,t.jsxs)(n.p,{children:["Open ",(0,t.jsx)(n.code,{children:"/etc/caddy/Caddyfile"})]}),"\n",(0,t.jsx)(n.p,{children:"Insert"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'yourdomain.com {\n        reverse_proxy localhost:3000\n        header Access-Control-Allow-Methods "POST, GET, OPTIONS"\n        header Access-Control-Allow-Headers "*"\n        import cors https://sub.domain.livechat\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>d});var t=r(96540);const o={},s=t.createContext(o);function i(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);