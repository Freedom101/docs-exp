"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[76099],{71674:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=e(74848),r=e(28453);const a={},i="Nixstats notification",o={id:"use-rocket.chat/workspace-administration/integrations/nixstats-notification",title:"Nixstats notification",description:"Add Nixstats notifications via a new WebHook in Rocket.Chat",source:"@site/docs/use-rocket.chat/workspace-administration/integrations/nixstats-notification.md",sourceDirName:"use-rocket.chat/workspace-administration/integrations",slug:"/use-rocket.chat/workspace-administration/integrations/nixstats-notification",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/integrations/nixstats-notification",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/use-rocket.chat/workspace-administration/integrations/nixstats-notification.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Nextcloud Rocket.Chat App",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/integrations/nextcloud-rocket.chat-app"},next:{title:"PagerDuty",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/integrations/pagerduty"}},c={},l=[{value:"Render nixstats graphs in Rocket.Chat",id:"render-nixstats-graphs-in-rocketchat",level:2}];function d(n){const t={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"nixstats-notification",children:"Nixstats notification"}),"\n",(0,s.jsx)(t.p,{children:"Add Nixstats notifications via a new WebHook in Rocket.Chat"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["In Rocket.Chat go to ",(0,s.jsx)(t.strong,{children:"Administration > Workspace > Integrations"})," and create ",(0,s.jsx)(t.strong,{children:"New Integration"}),"."]}),"\n",(0,s.jsx)(t.li,{children:"Choose Incoming WebHook."}),"\n",(0,s.jsx)(t.li,{children:'Follow all instructions like Enable, give it a name, link to channel, etc. Set "Enable Script" to true and enter the javascript in the "Script" box.'}),"\n",(0,s.jsxs)(t.li,{children:["Hit ",(0,s.jsx)(t.strong,{children:"Save changes"})," and copy the ",(0,s.jsx)(t.em,{children:"Webhook URL"})," (added just below the script box)."]}),"\n",(0,s.jsxs)(t.li,{children:["Go to ",(0,s.jsx)(t.a,{href:"https://nixstats.com",children:"https://nixstats.com"})," ",(0,s.jsx)(t.strong,{children:"-> Settings -> Notification Contacts -> Add"})," (or Edit a contact) contact."]}),"\n",(0,s.jsx)(t.li,{children:"Paste the Rocket.Chat URL you've copied in step 4."}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'Paste this javascript in the "Script" textarea on Rocket.Chat webhook settings'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'/* exported Script */\n/* globals console, _, s */\n\n/** Global Helpers\n *\n * console - A normal console instance\n * _       - An underscore instance\n * s       - An underscore string instance\n */\n\nclass Script {\n  /**\n   * @params {object} request\n   */\n  process_incoming_request({ request }) {\n    var url;\n    var url_title;\n    if(request.content.domain_id)\n    {\n      url = \'https://nixstats.com/domains/\'+request.content.domain_id;\n      url_title = request.content.name+" @ nixstats.com";\n    }\n    else\n    {\n      url = \'https://nixstats.com/server/\'+request.content.server_id;\n      url_title = request.content.server_name+" @ nixstats.com";\n    }\n    return {\n     content:{\n        text: request.content.subject,\n        "attachments": [\n          {\n            "author_name": url_title,\n            "author_link": url,\n            "author_icon": "https://nixstats.com/images/favicon.png"\n          }\n          ]\n       }\n    };\n  }\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"render-nixstats-graphs-in-rocketchat",children:"Render nixstats graphs in Rocket.Chat"}),"\n",(0,s.jsx)(t.p,{children:"Add Nixstats notifications via a new WebHook in Rocket.Chat"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsx)(t.li,{children:'In Rocket.Chat go to "Administration"->"Integrations" and create "New Integration".'}),"\n",(0,s.jsx)(t.li,{children:"Choose Outgoing WebHook."}),"\n",(0,s.jsxs)(t.li,{children:["Select ",(0,s.jsx)(t.strong,{children:"Message Sent"})," as Event trigger."]}),"\n",(0,s.jsxs)(t.li,{children:["Enter ",(0,s.jsx)(t.strong,{children:"ns"})," as trigger word."]}),"\n",(0,s.jsxs)(t.li,{children:["Enter ",(0,s.jsx)(t.code,{children:"<https://api.eu.nixstats.com/v1/>"})," as URLs."]}),"\n",(0,s.jsxs)(t.li,{children:["Avatar URL ",(0,s.jsx)(t.code,{children:"<https://nixstats.com/images/favicon.png>"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Token"}),", this is your nixstats API token, ",(0,s.jsx)(t.a,{href:"https://nixstats.com/settings/api",children:"create an API key"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:["Script Enabled set to ",(0,s.jsx)(t.strong,{children:"True"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:'Paste this javascript in the "Script" textarea on Rocket.Chat webhook settings'}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:"/* exported Script */\n/* globals Store */\n\nclass Script {\n  prepare_outgoing_request({ request }) {\n    let match;\n\n    match = request.data.text.match(/^ns servers\\s(ls|list)\\s*(.*)?$/);\n    if (match) {\n      let u = request.url + 'servers?perpage=99&token='+request.data.token;\n      return {\n        url: u,\n        headers: request.headers,\n        method: 'GET'\n      };\n    }\n\n    match = request.data.text.match(/^ns graphs\\s(.*)?$/);\n    if (match) {\n      var matched = false;\n      var options;\n      var serverrequest = HTTP('GET', request.url + 'servers?perpage=99&token='+request.data.token, options);\n      var serverlist = []\n      JSON.parse(serverrequest.result.content).servers.forEach(function(pr) {\n        serverlist.push({'name': pr.name, 'id': pr.id});\n      });\n\n      serverlist.forEach(function(serv) {\n        if(serv.id == match[1])\n        {\n          matched = serv.id;\n        }\n        if(serv.name == match[1])\n        {\n          matched = serv.id;\n        }\n      });\n\n      if(!matched){\n        return {\n          message: {\n            text: 'Server not found.'\n          }\n        };\n      }\n      else\n      {\n        let u = request.url + 'server/'+matched+'?charts=yes&token='+request.data.token;\n        return {\n          url: u,\n          headers: request.headers,\n          method: 'GET'\n        };\n      }\n    }\n\n    match = request.data.text.match(/^help$/);\n    if (match) {\n      return {\n        message: {\n          text: [\n            '**Nixstats commands**',\n            '```',\n              '  ns servers ls|list',\n              '  ns graphs serverid|servername',\n            '```'\n          ].join('\\n')\n        }\n      };\n    }\n  }\n\n  process_outgoing_response({ request, response }) {\n    var text = [];\n    var attach = [];\n    if(response.content.charts)\n    {\n      response.content.charts.forEach(function(pr) {\n        attach.push({\n           \"color\": \"#000000\",\n           \"text\": pr.title+\" on \"+response.content.name,\n           \"image_url\": pr.url,\n         });\n      });\n        text.push('Performance of '+response.content.name);\n    }\n    else\n    {\n      text.push('```');\n      response.content.servers.forEach(function(pr) {\n        text.push(''+pr.id+\"\\t \"+pr.last_data.load.replace(\",\",\",\\t\")+\"\\t\"+pr.name+'');\n      });\n      text.push('```');\n    }\n    return {\n      content: {\n        text: text.join('\\n'),\n        attachments: attach,\n        parseUrls: false\n      }\n    };\n  }\n}\n"})}),"\n",(0,s.jsx)(t.p,{children:"After saving the data you can use the following commands to retrieve data:"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"ns servers list"})," to list your servers with their IDs and load average."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"ns graphs [serverid]"})," to retrieve a graph of Memory, Network, Load average and Disk usage of the specified server."]})]})}function h(n={}){const{wrapper:t}={...(0,r.R)(),...n.components};return t?(0,s.jsx)(t,{...n,children:(0,s.jsx)(d,{...n})}):d(n)}},28453:(n,t,e)=>{e.d(t,{R:()=>i,x:()=>o});var s=e(96540);const r={},a=s.createContext(r);function i(n){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof n?n(t):{...t,...n}}),[t,n])}function o(n){let t;return t=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:i(n.components),s.createElement(a.Provider,{value:t},n.children)}}}]);