"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9556],{8981:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var n=s(74848),r=s(28453);const a={description:"Broadcast audio, and video material, as well as transmit arbitrary data between browsers without the need for a middleman"},i="WebRTC",o={id:"use-rocket.chat/workspace-administration/settings/webrtc",title:"WebRTC",description:"Broadcast audio, and video material, as well as transmit arbitrary data between browsers without the need for a middleman",source:"@site/docs/use-rocket.chat/workspace-administration/settings/webrtc.md",sourceDirName:"use-rocket.chat/workspace-administration/settings",slug:"/use-rocket.chat/workspace-administration/settings/webrtc",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/settings/webrtc",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/use-rocket.chat/workspace-administration/settings/webrtc.md",tags:[],version:"current",frontMatter:{description:"Broadcast audio, and video material, as well as transmit arbitrary data between browsers without the need for a middleman"},sidebar:"tutorialSidebar",previous:{title:"Webdav Integration",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/settings/webdav-integration"},next:{title:"Sounds",permalink:"/docs-exp/docs/use-rocket.chat/workspace-administration/sounds"}},c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"webrtc",children:"WebRTC"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://webrtc.org",children:"WebRTC"})," (Web Real-Time Communication) is a technology that allows Web apps and sites to record and potentially broadcast audio and/or video material, as well as transmit arbitrary data between browsers without the need for a middleman."]}),"\n",(0,n.jsxs)(t.p,{children:["To access this setting, go to ",(0,n.jsx)(t.strong,{children:"Administration"})," > ",(0,n.jsx)(t.strong,{children:"Workspace"})," > ",(0,n.jsx)(t.strong,{children:"Settings"})," > ",(0,n.jsx)(t.strong,{children:"WebRTC"}),"."]}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Enable for Public Channels"}),": WebRTC will be enabled for all public channels if set to true."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Enable for Private Channels"}),": When enabled, private channels will have WebRTC."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Enable for Direct Messages"}),": If set to true, direct messages will have WebRTC."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"STUN/TURN Servers"}),": A list of STUN and TURN servers separated by a comma."]}),"\n",(0,n.jsxs)(t.p,{children:["Username, password, and port are allowed in the format ",(0,n.jsx)(t.code,{children:"username:password@stun:host:port"})," or ",(0,n.jsx)(t.code,{children:"username:password@turn:host:port"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>o});var n=s(96540);const r={},a=n.createContext(r);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);