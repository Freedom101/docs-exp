"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[13632],{64229:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var t=o(74848),i=o(28453);const r={},s="Configure a Replica Set for MongoDB",a={id:"setup-and-configure/environment-configuration/mongodb-configuration/configure-a-replica-set-for-mongodb",title:"Configure a Replica Set for MongoDB",description:"Rocket.Chat uses the MongoDB replica set to improve performance via Meteor Oplog tailing. Replica sets are used to provide high data availability by maintaining multiple copies of the data across different servers.",source:"@site/docs/setup-and-configure/environment-configuration/mongodb-configuration/configure-a-replica-set-for-mongodb.md",sourceDirName:"setup-and-configure/environment-configuration/mongodb-configuration",slug:"/setup-and-configure/environment-configuration/mongodb-configuration/configure-a-replica-set-for-mongodb",permalink:"/docs-exp/docs/setup-and-configure/environment-configuration/mongodb-configuration/configure-a-replica-set-for-mongodb",draft:!1,unlisted:!1,editUrl:"https://github.com/Freedom101/docs-exp/tree/main/my-website/docs/setup-and-configure/environment-configuration/mongodb-configuration/configure-a-replica-set-for-mongodb.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Additional MongoDB Driver Options",permalink:"/docs-exp/docs/setup-and-configure/environment-configuration/mongodb-configuration/additional-mongodb-driver-options"},next:{title:"Migrate from Built-In Meteor MongoDB to External Server",permalink:"/docs-exp/docs/setup-and-configure/environment-configuration/mongodb-configuration/migrate-from-built-in-meteor-mongodb-to-external-server"}},c={},l=[{value:"Restart MongoDB and initiate the replica set",id:"restart-mongodb-and-initiate-the-replica-set",level:2},{value:"Reconfigure and restart Rocket.Chat service",id:"reconfigure-and-restart-rocketchat-service",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"configure-a-replica-set-for-mongodb",children:"Configure a Replica Set for MongoDB"}),"\n",(0,t.jsxs)(n.p,{children:["Rocket.Chat uses the ",(0,t.jsx)(n.a,{href:"http://docs.mongodb.org/manual/replication/",children:"MongoDB replica set"})," to improve performance via Meteor Oplog tailing. Replica sets are used to provide high data availability by maintaining multiple copies of the data across different servers."]}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"Check the release notes to ensure you are using a compatible version of MongoDB."})}),"\n",(0,t.jsxs)(n.p,{children:["To configure the replica set, add this section to the ",(0,t.jsx)(n.code,{children:"mongod.conf"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'replication: // indicates the beginning of the replication configuration section\n  replSetName: "rs01"\n'})}),"\n",(0,t.jsx)(n.p,{children:"For example, run the following command to update the replication settings in the MongoDB configuration file:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'echo -e "replication:\\n  replSetName: \\"rs01\\"" | sudo tee -a /etc/mongod.conf\n'})}),"\n",(0,t.jsx)(n.h2,{id:"restart-mongodb-and-initiate-the-replica-set",children:"Restart MongoDB and initiate the replica set"}),"\n",(0,t.jsx)(n.p,{children:"Follow these steps to initiate the MongoDB replica set:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Restart MongoDB service:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl restart mongod\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"2",children:["\n",(0,t.jsx)(n.li,{children:"Start the MongoDB shell and initiate the replica set:"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"mongo\n> rs.initiate()\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output of the command should look like this:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'{\n    "info2" : "no configuration specified. Using a default configuration for the set",\n    "me" : "127.0.0.1:27017",\n    "ok" : 1,\n    "operationTime" : Timestamp(1538772048, 1),\n    "$clusterTime" : {\n        "clusterTime" : Timestamp(1538772048, 1),\n        "signature" : {\n            "hash" : BinData(0,"AAAAAAAAAAAAAAAAAAAAAAAAAAA="),\n            "keyId" : NumberLong(0)\n        }\n    }\n}\nrs01:SECONDARY>\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Note that the ",(0,t.jsx)(n.code,{children:"ok"})," value should be ",(0,t.jsx)(n.code,{children:"1"}),". Any other value, i.e. 93, means something is wrong."]}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsxs)(n.li,{children:["Hit enter, you should see your prompt turn into ",(0,t.jsx)(n.code,{children:"rs01:PRIMARY>"}),", this indicates the replica set is being used. Type ",(0,t.jsx)(n.code,{children:"exit"})," to get back to your regular shell:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"rs01:PRIMARY> exit\nbye\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Troubleshooting"})}),"\n",(0,t.jsxs)(n.p,{children:["Depending on your network settings, including ",(0,t.jsx)(n.code,{children:"/etc/hosts"})," and DNS, if you have configured Rocket.Chat to use ",(0,t.jsx)(n.code,{children:"localhost:27017"}),", you may see an error similar to this:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'[conn1] created this configuration for initiation : { _id: "rs0", version: 1, members: [ { _id: 0, host: "test:27017" } ] }\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"rs.initiate()"})," may be defaulting to the host name e.g., ",(0,t.jsx)(n.code,{children:"test"}),"."]}),"\n",(0,t.jsx)(n.p,{children:"You can force a different hostname as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"rs.initiate({ _id: 'rs01', members: [ { _id: 0, host: 'localhost:27017' } ]})\n"})}),"\n",(0,t.jsx)(n.p,{children:"You should get a response similar to the following:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"> rs.initiate({ _id: 'rs01', members: [ { _id: 0, host: 'localhost:27017' } ]})\n{ \"ok\" : 1 }\nrs0:OTHER>\n"})}),"\n",(0,t.jsx)(n.h2,{id:"reconfigure-and-restart-rocketchat-service",children:"Reconfigure and restart Rocket.Chat service"}),"\n",(0,t.jsxs)(n.p,{children:["After you configured the replica set, you must add the ",(0,t.jsx)(n.code,{children:"MONGO_OPLOG_URL"})," environment variable to the service definition and restart Rocket.Chat server."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["In CentOS, open the file ",(0,t.jsx)(n.code,{children:"/usr/lib/systemd/system/rocketchat.service"})]}),"\n",(0,t.jsxs)(n.li,{children:["In Ubuntu or Debian, open the file ",(0,t.jsx)(n.code,{children:"/lib/systemd/system/rocketchat.service"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Add the following to the environment line:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"MONGO_OPLOG_URL=mongodb://localhost:27017/local?replSet=rs01\n"})}),"\n",(0,t.jsx)(n.p,{children:"Reload the system state and restart Rocket.Chat:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sudo systemctl daemon-reload && sudo systemctl restart rocketchat\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(96540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);